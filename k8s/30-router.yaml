apiVersion: v1
kind: ConfigMap
metadata:
  name: wpp-router-conf
  namespace: wppconnect
data:
  nginx.conf: |
    worker_processes auto;
    events { worker_connections 1024; }
    http {
      lua_shared_dict dummy 1m;
      resolver kube-dns.kube-system.svc.cluster.local valid=30s ipv6=off;
      server {
        listen 8080;
        # health
        location = /healthz { return 200 "ok"; }

        # estáticos e docs
        location ~ ^/(metrics|api-docs|files) {
          proxy_pass http://wppconnect-hl.wppconnect.svc.cluster.local:21465;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # sharding por sessão
        location ~ ^/api/([^/]+)/ {
          set $target "";
          set_by_lua_block $target {
            local m = ngx.re.match(ngx.var.request_uri, [[^/api/([^/]+)/]])
            if not m then
              return "wppconnect-0.wppconnect-hl.wppconnect.svc.cluster.local:21465"
            end
            local session = m[1]
            local replicas = tonumber(os.getenv("REPLICAS")) or 1
            local shard = bit.band(ngx.crc32_long(session), 0x7fffffff) % replicas
            return string.format("wppconnect-%d.wppconnect-hl.wppconnect.svc.cluster.local:21465", shard)
          }
          proxy_pass http://$target;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # fallback
        location / {
          proxy_pass http://wppconnect-hl.wppconnect.svc.cluster.local:21465;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wpp-router
  namespace: wppconnect
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wpp-router
  template:
    metadata:
      labels:
        app: wpp-router
    spec:
      containers:
        - name: openresty
          image: openresty/openresty:1.25.3.2-alpine
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: REPLICAS
              value: '3'
          volumeMounts:
            - name: conf
              mountPath: /usr/local/openresty/nginx/conf/nginx.conf
              subPath: nginx.conf
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: conf
          configMap:
            name: wpp-router-conf
---
apiVersion: v1
kind: Service
metadata:
  name: wpp-router
  namespace: wppconnect
spec:
  type: LoadBalancer
  selector:
    app: wpp-router
  ports:
    - name: http
      port: 80
      targetPort: 8080
